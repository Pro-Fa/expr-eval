{
  "name": "@pro-fa/expr-eval",
  "version": "4.0.1",
  "description": "Mathematical expression evaluator",
  "keywords": [
    "expression",
    "math",
    "evaluate",
    "eval",
    "function",
    "parser"
  ],
  "homepage": "https://github.com/Pro-Fa/expr-eval#readme",
  "bugs": {
    "url": "https://github.com/Pro-Fa/expr-eval/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Pro-Fa/expr-eval.git"
  },
  "license": "MIT",
  "author": "Matthew Crumley, Mark Sironi, Sander Toonen",
  "type": "module",
  "sideEffects": false,
  "engines": {
    "node": ">=18.0.0"
  },
  "main": "dist/index.mjs",
  "module": "dist/index.mjs",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/bundle.js"
    }
  },
  "directories": {
    "test": "test"
  },
  "files": [
    "dist/"
  ],
  "scripts": {
    "test": "npm run build && vitest run",
    "test:ts": "vitest run test/expression/expression-core-partial.ts test/expression/expression-advanced-partial.ts test/expression/expression-fork-partial.ts test/expression/expression-methods-partial.ts test/functions/functions-binary-ops-partial.ts test/functions/functions-unary-ops-partial.ts test/functions/functions-advanced-partial.ts test/functions/functions-array-string-partial.ts test/functions/functions-logical-partial.ts test/functions/functions-higher-order-partial.ts test/parser/parser-core-partial.ts test/parser/parser-numbers-partial.ts test/parser/parser-options-partial.ts test/operators/operators-comparison-partial.ts test/operators/operators-logical-partial.ts test/operators/operators-math-trig-partial.ts test/operators/operators-math-basic-partial.ts test/operators/operators-misc-partial.ts",
    "test:ts:watch": "vitest --testNamePattern=partial",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "coverage": "npm run build && vitest run --coverage",
    "test:typecheck": "vitest typecheck",
    "bench": "npm run build && tsx benchmarks/index.bench.ts",
    "bench:detailed": "npm run build && tsx benchmarks/index.bench.ts",
    "bench:parsing": "npm run build && vitest run benchmarks/parsing.bench.ts",
    "bench:evaluation": "npm run build && vitest run benchmarks/evaluation.bench.ts",
    "bench:memory": "npm run build && vitest run benchmarks/memory.bench.ts",
    "bench:ci": "npm run build && tsx benchmarks/index.bench.ts",
    "lint": "eslint **/*.ts --ignore-pattern parser.d.ts",
    "tsgo": "tsgo",
    "check-types": "tsgo --noEmit",
    "type-check": "tsgo --noEmit",
    "build:types": "tsgo -p tsconfig.build.json --emitDeclarationOnly",
    "build:esm": "cross-env BUILD_TARGET=esm vite build",
    "build:umd": "cross-env BUILD_TARGET=umd vite build",
    "build:umd-min": "cross-env BUILD_TARGET=umd-min vite build",
    "build:js": "npm run build:esm && npm run build:umd && npm run build:umd-min",
    "build": "npm run build:js",
    "watch": "cross-env BUILD_TARGET=esm vite build --watch",
    "clean": "rimraf dist",
    "prepublish": "npm run build"
  },
  "devDependencies": {
    "@eslint/js": "^9.15.0",
    "@rollup/plugin-typescript": "^12.1.4",
    "@types/node": "^24.5.2",
    "@typescript/native-preview": "^7.0.0-dev.20250920.1",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "cross-env": "^7.0.3",
    "eslint": "^9.15.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-n": "^17.0.0",
    "eslint-plugin-promise": "^7.0.0",
    "rimraf": "^6.0.1",
    "tinybench": "^5.0.1",
    "ts-node": "^10.9.2",
    "tslib": "^2.8.1",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2",
    "typescript-eslint": "^8.15.0",
    "vite": "^6.0.1",
    "vite-plugin-dts": "^4.3.0",
    "vitest": "^3.2.4"
  },
  "bundlesize": [
    {
      "path": "./dist/bundle.min.js",
      "maxSize": "50kb"
    },
    {
      "path": "./dist/index.mjs",
      "maxSize": "80kb"
    }
  ]
}
